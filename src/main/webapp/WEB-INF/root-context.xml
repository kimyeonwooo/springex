<?xml version="1.0" encoding="UTF-8"?>

<!-- root.context.xml은 일반적으로 스프링 프레임워크 이용시 사용하는 기본 설정 파일-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           https://www.springframework.org/schema/context/spring-context.xsd
                           http://mybatis.org/schema/mybatis-spring
                           http://mybatis.org/schema/mybatis-spring.xsd">

    <!--    샘플패키지 관련 내용 -->
<!--    <context:component-scan base-package="net.ict.springex.sample"/>-->


    <context:component-scan base-package="net.ict.springex.config"/>
    <context:component-scan base-package="net.ict.springex.service"/>       <!-- 그래야 Bean 등록 가능 -->





    <!-- java class를 웹문서형태로 만든 것이 XMl 문서 형태이다. -->

    <!-- 하나의 bean 영역을 클래스라고 생각하면 됨.
         여기서 hikariconfig bean은 hikariConfig class라고 생각하면 편함 -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <!--▼ property는 setproperty와 같음! hikariConfig 클래스에 값을 넣는 것 -->
        <property name="driverClassName" value="org.mariadb.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mariadb://localhost:3305/webdb"></property>
        <property name="username" value="webuser"></property>
        <property name="password" value="webuser"></property>
        <property name="dataSourceProperties">
            <props>
                <prop key="cachePrepStmts">true</prop>
                <prop key="prepStmtCacheSize">250</prop>
                <prop key="prepStmtCacheSqlLimit">2048</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
          destroy-method="close">
        <!-- ▼ 생성자 태그 : hikariConfig 파라미터를 받아 인잭션 하겠다-->
        <constructor-arg ref="hikariConfig" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:/mappers/**/*.xml" />
                    <!--mappers 파일 위치        classpath:/...  인식되는 경로는 :/... 와 같다
                                                mappers 하위 모든 파일들을 매핑 시켜라-->

    </bean>

    <!-- mybatis 호출 -->
    <mybatis:scan base-package="net.ict.springex.mapper"></mybatis:scan>


</beans>